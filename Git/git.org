#+TITLE: Git

* Introduction 

[[https://git-scm.com/][Git]] is a distributed version control system that helps to track
changes in files (ideally plain text) and enables efficient
collaboration even remotely. In general you should track only small
files like scripts, configuration files, text file in markdown or
LaTeX but there is [[https://git-lfs.github.com/][extension for also dealing with larger files]].

Git is your parachut, time machine and much more. While it might look
a lot of effort in the beginning to use git you will soon that it pays
of. 

- [[https://scfbm.biomedcentral.com/articles/10.1186/1751-0473-8-7][Git can facilitate greater reproducibility and increased transparency in science]]
- Video: [[https://www.youtube.com/watch?v%3DOqmSzXDrJBk][What is Git - A Quick Introduction to the Git Version Control System]]

* Most important commands
** For local use
  - config (run only for the first time)
  - init
  - add
  - commit
  - checkout
  - log
  - status
  - diff

** For working with remote repositories
  - clone
  - push
  - pull

** More advanced
- branch
- stash
- "git add -p" - [[http://johnkary.net/blog/git-add-p-the-most-powerful-git-feature-youre-not-using-yet/][for selecting parts of a file]] 
- .git/config
- merge
- ... much, much more


* Solutions to some problems

** Show all commits of a file and get a copy of an old version

Get the history of the file

#+BEGIN_SRC 
git log -p <FILE_PATH>
#+END_SRC

Then use the hash sum of a commit of choice:

#+BEGIN_SRC 
git cat-file -p <SHA1-HASH>:<FILE_PATH> > <ANOTHER_FILE_NAME>
#+END_SRC

* Good Commit messages
- https://github.com/erlang/otp/wiki/Writing-good-commit-messages
- https://github.com/slashsBin/styleguide-git-commit-message
- https://chris.beams.io/posts/git-commit/
* Workflows
- [[http://nvie.com/posts/a-successful-git-branching-model/][Git Flow]]
- [[http://scottchacon.com/2011/08/31/github-flow.html][GitHub Flow]]
- [[https://about.gitlab.com/2014/09/29/gitlab-flow/][GitLab Flow]]
* Git LFS

- [[https://git-lfs.github.com/][Git LFS]]
- [[https://github.com/git-lfs/git-lfs/wiki/Tutorial][Git LFS Tutorial]]

* Further links
- Video: [[https://www.youtube.com/watch?v%3DuR6G2v_WsRA][Introduction to Git - Core Concepts]]
- [[http://journals.plos.org/ploscompbiol/article?id%3D10.1371/journal.pcbi.1004947][Ten Simple Rules for Taking Advantage of Git and GitHub]]
- https://swcarpentry.github.io/git-novice/
- [[https://24ways.org/2013/keeping-parts-of-your-codebase-private-on-github/][Keeping Parts of Your Codebase Private on GitHub]]
- [[https://marklodato.github.io/visual-git-guide/index-en.html][A Visual Git Reference]]
- [[https://onlywei.github.io/explain-git-with-d3][Visualizing Git Concepts with D3]]
- [[https://www.atlassian.com/git/tutorials][Become a git guru]]
- [[http://learngitbranching.js.org/][Learn Git Branching]] - cool, interactive page!

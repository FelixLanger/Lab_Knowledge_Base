* Why Python

* Introduction for beginner without programming experiences

- An Introduction to Programming for Bioscientists: A Python-Based Primer
  http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004867

* General hints
* Misc/Unsorted links


- main() => get an overview

- https://www.python.org/dev/peps/pep-0008/
- pylint flat

- How to organize a Python package
  http://docs.python-guide.org/en/latest/writing/structure/

- https://en.wikipedia.org/wiki/Syntactic_sugar

- Use Python 3 http://pythonclock.org/

- Scientific Python Cheat Sheet https://github.com/IPGP/scientific_python_cheat_sheet

https://www.youtube.com/watch?v=o9pEzgHorH0

- Transforming Code into Beautiful, Idiomatic Python
https://www.youtube.com/watch?v=OSGv2VnC0go

- Stop Writing Classes 
https://www.youtube.com/watch?v=o9pEzgHorH0

- pyformat https://pypi.python.org/pypi/pyformat

- http://www.pythontutor.com/

- Packaging:
  https://medium.com/small-things-about-python/lets-talk-about-python-packaging-6d84b81f1bb5#.vumtjvmgt
  https://python-packaging.readthedocs.io/en/latest/index.html

- Pandas
  Podcast: https://www.podcastinit.com/episode-98-pandas-with-jeff-reback/

- https://talkpython.fm/
  - Episode #100: Python past, present, and future with Guido van Rossum https://talkpython.fm/episodes/show/100/python-past-present-and-future-with-guido-van-rossum
- https://www.podcastinit.com
  

* Testing

- Cognitive load - small functions - unit testing
- http://docs.pytest.org/en/latest/


** Levels
- Unit testin
- Integration testing
- System testing


Regression testing in all levels


** Sources

- http://pythontesting.net/
  - Discussion of the different levels http://pythontesting.net/podcast/27-mahmoud-hashemi-unit-integration-system-testing/

* Best practices 

- [[https://www.python.org/dev/peps/pep-0008/][PEP 8 - Style Guide for Python Code]]

* Packaging

- https://conda.io/
- https://bioconda.github.io/

* Biopython
* Numpy/Scipy
* Pandas
* IDEs for Python
* Futher useful libraries

- pomegranate - https://pomegranate.readthedocs.io Fast, flexible and easy to use probabilistic modelling in Python;
  For Hidden-Markov-Model, Finite State Machines etc:
- statsmodels.sourceforge.net  


* Book recommendations

  - Fluent Python

